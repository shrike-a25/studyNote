{"version":3,"sources":["webpack:///./src/components/TagsBlock.jsx","webpack:///./src/layouts/Header.jsx","webpack:///./src/styles/prism.js","webpack:///./src/layouts/Content.jsx","webpack:///./src/templates/ampPost.jsx","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.link.js"],"names":["TagsContainer","props","theme","shadows","post","default","TagsBlock","list","map","tag","upperTag","charAt","toUpperCase","slice","key","to","Wrapper","breakpoints","m","s","Text","colors","text","base","Subtitle","Header","children","title","date","cover","fluid","alt","defaultProps","generatePrism","css","background","light","link","Content","input","dangerouslySetInnerHTML","__html","SuggestionBar","ListSuggestionBar","PostSuggestion","Post","data","pageContext","next","prev","relatedPosts","latestPosts","markdownRemark","image","frontmatter","childImageSharp","html","relatedList","i","relatedPost","push","path","latestList","latestPost","description","excerpt","pathname","article","tags","query","createHTML","url","this"],"mappings":"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","file":"component---src-templates-amp-post-jsx-454ac443b95e35f9bdea.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from '@emotion/styled'\nimport PropTypes from 'prop-types'\n\nconst TagsContainer = styled.div`\n  margin: 1rem 0;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  a {\n    margin: 0 1rem 1rem 0;\n    color: white;\n    padding: 0.3rem 0.6rem;\n    background: #666666;\n    border-radius: 10px;\n    &:hover {\n      background: black;\n      box-shadow: ${props => props.theme.shadows.post.default};\n      transform: scale(1.02);\n    }\n  }\n`\n\nconst TagsBlock = ({ list }) => (\n  <TagsContainer>\n    {list &&\n      list.map(tag => {\n        const upperTag = tag.charAt(0).toUpperCase() + tag.slice(1)\n        return (\n          <Link key={tag} to={`/tags/${tag}`}>\n            <span>{upperTag}</span>\n          </Link>\n        )\n      })}\n  </TagsContainer>\n)\n\nexport default TagsBlock\n\nTagsBlock.propTypes = {\n  list: PropTypes.array\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport Img from 'gatsby-image'\nimport PropTypes from 'prop-types'\n\nconst Wrapper = styled.header`\n  /* background: ${props => props.theme.gradient.rightToLeft}; */\n  height: 300px;\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    height: 300px;\n  }\n  @media (max-width: ${props => props.theme.breakpoints.s}) {\n    height: 275px;\n  }\n  position: relative;\n  overflow: hidden;\n`\n\nconst Text = styled.div`\n  color: ${props => props.theme.colors.text.base};\n  z-index: 0;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  width: 100%;\n  /* max-width: ${props => props.theme.layout.base}; */\n  padding: 0 2rem;\n  margin-bottom: 3rem;\n  align-items: center;\n`\n\nconst Subtitle = styled.p`\n  max-width: 650px;\n  color: ${props => props.theme.colors.text.base};\n`\n\nconst Header = ({ children, title, date, cover }) => (\n  <Wrapper>\n    <Img fluid={cover || {} || [] || ''} alt={title} />\n    <Text>\n      <h1>{title}</h1>\n      <h3>{date}</h3>\n\n      {children && <Subtitle>{children}</Subtitle>}\n    </Text>\n  </Wrapper>\n)\n\nexport default Header\n\nHeader.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n  cover: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  date: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  title: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.bool\n  ])\n}\n\nHeader.defaultProps = {\n  children: false,\n  cover: false,\n  date: false,\n  title: false\n}\n","import { css } from '@emotion/core'\n\nconst generatePrism = ({ theme }) => css`\n  p > code,\n  li > code {\n    color: #f8f8f2;\n    background: #131316;\n    font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n    text-align: left;\n    word-spacing: normal;\n    word-break: normal;\n    word-wrap: normal;\n    line-height: 1.5;\n    padding: 0.4em 0.5em;\n    margin: 0.5em 0;\n    overflow: auto;\n    border-radius: 0.3em;\n    tab-size: 4;\n    hyphens: none;\n  }\n  code[class*='language-'],\n  pre[class*='language-'] {\n    color: #f8f8f2;\n    background: none;\n    font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n    text-align: left;\n    word-spacing: normal;\n    word-break: normal;\n    word-wrap: normal;\n    line-height: 1.5;\n    tab-size: 4;\n    hyphens: none;\n  }\n  pre[class*='language-'] {\n    padding: 1em;\n    margin: 1.5rem 0;\n    overflow: auto;\n    border-radius: 0.3em;\n    &::-webkit-scrollbar-thumb {\n      background: ${theme.colors.background};\n    }\n    &::-webkit-scrollbar-track {\n      background: ${theme.colors.text.light};\n    }\n    &::-webkit-scrollbar {\n      width: 12px;\n      height: 12px;\n    }\n  }\n  pre[class*='language-'] {\n    background: #131316;\n  }\n  p > code[class*='language-'],\n  li > code[class*='language-'] {\n    border-radius: 0.3em;\n    background: rgba(52, 152, 219, 0.2);\n    color: #2e3246;\n    bottom: 2px;\n    position: relative;\n  }\n  .token.operator {\n    color: #bc78d7;\n  }\n  .token.comment,\n  .token.prolog,\n  .token.doctype,\n  .token.cdata {\n    color: slategray;\n  }\n  .token.punctuation {\n    color: #7ad7e2;\n  }\n  .namespace {\n    opacity: 0.7;\n  }\n  .token.property,\n  .token.tag,\n  .token.constant,\n  .token.symbol,\n  .token.deleted {\n    color: #ef514f;\n  }\n  .token.boolean,\n  .token.number {\n    color: #ae81ff;\n  }\n  .token.selector,\n  .token.attr-name,\n  .token.string,\n  .token.char,\n  .token.builtin,\n  .token.inserted {\n    color: #e5db89;\n  }\n  .token.entity,\n  .token.url,\n  .language-css .token.string,\n  .style .token.string,\n  .token.variable {\n    color: #f8f8f2;\n  }\n  .token.atrule,\n  .token.attr-value,\n  .token.class-name {\n    color: #e6db74;\n  }\n  .token.function {\n    color: #84c16a;\n  }\n\n  .token.keyword {\n    color: #6095ea;\n  }\n  .token.regex,\n  .token.important {\n    color: #fd971f;\n  }\n  .token.important,\n  .token.bold {\n    font-weight: bold;\n  }\n  .token.italic {\n    font-style: italic;\n  }\n  .token.entity {\n    cursor: help;\n  }\n`\n\nexport default generatePrism\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport generatePrism from '../styles/prism';\n\nconst Wrapper = styled.div`\n  ${generatePrism};\n  color: ${props => props.theme.colors.text.base};\n  p,\n  li {\n    letter-spacing: -0.003em;\n    --baseline-multiplier: 0.179;\n    --x-height-multiplier: 0.35;\n    font-size: 1.15rem;\n    line-height: 2;\n    code {\n      padding: 0.2rem 0.5rem;\n      margin: 0.5rem 0;\n    }\n  }\n  a:not(.gatsby-resp-image-link):not(.anchor) {\n    color: ${props => props.theme.colors.text.link};\n    box-shadow: inset 0 -2px 0 ${props => props.theme.colors.background};\n    border-bottom: 1px solid ${props => props.theme.colors.background};\n    text-decoration: none;\n    &:hover,\n    &:focus {\n      background: ${props => props.theme.colors.background};\n      color: ${props => props.theme.colors.text.link};\n    }\n  }\n  h1 {\n    margin-top: 3rem;\n  }\n  h2 {\n    margin-top: 1rem;\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    display: block;\n    position: relative;\n    a {\n      box-shadow: none;\n      border-bottom: none;\n      &:hover,\n      &:focus {\n        background: none;\n      }\n    }\n    &:hover {\n      .anchor svg {\n        opacity: 0.8;\n      }\n    }\n  }\n`;\n\nconst Content = ({ input }) => (\n  <Wrapper dangerouslySetInnerHTML={{ __html: input }} />\n);\n\nexport default Content;\n\nContent.propTypes = {\n  input: PropTypes.any.isRequired,\n};\n","import React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\nimport Layout from '../layouts/';\r\nimport Container from '../layouts/Container';\r\nimport Content from '../layouts/Content';\r\nimport Header from '../layouts/Header';\r\nimport SEO from '../components/SEO';\r\nimport TagsBlock from '../components/TagsBlock';\r\n\r\nconst SuggestionBar = styled.div`\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  justify-content: space-between;\r\n  background: ${props => props.theme.colors.background};\r\n  box-shadow: ${props => props.theme.shadows.post.default};\r\n`;\r\nconst ListSuggestionBar = styled.div`\r\n  background: ${props => props.theme.colors.background};\r\n  box-shadow: ${props => props.theme.shadows.post.default};\r\n`;\r\nconst PostSuggestion = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 1rem 3rem 0 3rem;\r\n  a {\r\n    color: ${props => props.theme.colors.text.base};\r\n  }\r\n`;\r\n\r\nconst Post = ({ data, pageContext }) => {\r\n  const { next, prev, relatedPosts, latestPosts } = pageContext;\r\n  const post = data.markdownRemark;\r\n  const image = post.frontmatter.cover.childImageSharp.fluid;\r\n  const title = post.frontmatter.title;\r\n  const date = post.frontmatter.date;\r\n  const html = post.html;\r\n\r\n  //関連記事\r\n  const relatedList = [];\r\n  for (var i in relatedPosts) {\r\n    const relatedPost = relatedPosts[i];\r\n    relatedList.push(\r\n      <PostSuggestion>\r\n        {relatedPost && (\r\n          <Link to={relatedPost.frontmatter.path}>\r\n            relatedPost\r\n            <h3>{relatedPost.frontmatter.title}</h3>\r\n          </Link>\r\n        )}\r\n      </PostSuggestion>\r\n    );\r\n  }\r\n\r\n  //直近\r\n  const latestList = [];\r\n  for (var i in latestPosts) {\r\n    const latestPost = latestPosts[i];\r\n    latestList.push(\r\n      <PostSuggestion>\r\n        {latestPost && (\r\n          <Link to={`posts${latestPost.frontmatter.path}`}>\r\n            latestPost\r\n            <h3>{latestPost.frontmatter.title}</h3>\r\n          </Link>\r\n        )}\r\n      </PostSuggestion>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title={title}\r\n        description={post.frontmatter.description || post.excerpt || ' '}\r\n        image={image}\r\n        pathname={post.frontmatter.path}\r\n        article\r\n      />\r\n      {/* <Header title={title} date={date} cover={image} /> */}\r\n      <Container>\r\n        <Content input={html} />\r\n        <TagsBlock list={post.frontmatter.tags || []} />\r\n      </Container>\r\n      <SuggestionBar>\r\n        <PostSuggestion>\r\n          {prev && (\r\n            <Link to={prev.frontmatter.path}>\r\n              Previous\r\n              <h3>{prev.frontmatter.title}</h3>\r\n            </Link>\r\n          )}\r\n        </PostSuggestion>\r\n        <PostSuggestion>\r\n          {next && (\r\n            <Link to={next.frontmatter.path}>\r\n              Next\r\n              <h3>{next.frontmatter.title}</h3>\r\n            </Link>\r\n          )}\r\n        </PostSuggestion>\r\n      </SuggestionBar>\r\n      <ListSuggestionBar>\r\n        関連記事\r\n        {relatedList}\r\n      </ListSuggestionBar>\r\n      <ListSuggestionBar>\r\n        最近投稿した記事\r\n        {latestList}\r\n      </ListSuggestionBar>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n\r\nPost.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    prev: PropTypes.object,\r\n    next: PropTypes.object,\r\n    relatedPosts: PropTypes.array,\r\n    latestPosts: PropTypes.array,\r\n  }).isRequired,\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\nexport const query = graphql`\r\n  query($pathSlug: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\r\n      html\r\n      frontmatter {\r\n        date\r\n        title\r\n        path\r\n        tags\r\n        description\r\n        cover {\r\n          childImageSharp {\r\n            fluid(\r\n              maxWidth: 1920\r\n              quality: 90\r\n              duotone: { highlight: \"#386eee\", shadow: \"#2323be\", opacity: 60 }\r\n            ) {\r\n              ...GatsbyImageSharpFluid_withWebp\r\n            }\r\n            resize(width: 1200, quality: 90) {\r\n              src\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}