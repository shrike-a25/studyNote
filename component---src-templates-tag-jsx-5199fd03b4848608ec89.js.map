{"version":3,"sources":["webpack:///./src/components/Post.jsx","webpack:///./src/components/TagsBlock.jsx","webpack:///./src/layouts/Header.jsx","webpack:///./src/templates/tag.jsx"],"names":["Wrapper","Image","props","theme","shadows","post","default","hover","colors","background","Information","text","base","light","Date","Title","Post","path","cover","title","date","excerpt","tags","to","fluid","alt","list","TagsContainer","TagsBlock","map","tag","upperTag","charAt","toUpperCase","slice","key","breakpoints","m","s","Text","Subtitle","Header","children","defaultProps","StyledLink","Link","Tag","pageContext","posts","tagName","site","index","frontmatter","childImageSharp"],"mappings":"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","file":"component---src-templates-tag-jsx-5199fd03b4848608ec89.js","sourcesContent":["import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\nimport TagsBlock from './TagsBlock'\r\nimport Container from '../layouts/Container'\r\n\r\nconst Wrapper = styled.article`\r\n  margin: 0 3rem;\r\n  display: flex;\r\n  @media (max-width: 1000px) {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Image = styled.div`\r\n  margin: auto;\r\n  position: relative;\r\n  box-shadow: ${props => props.theme.shadows.post.default};\r\n  /* transition: ${props => props.theme.transitions.boom.transition}; */\r\n  border-radius: 8px;\r\n  min-height: 300px;\r\n  img {\r\n    border-radius: 8px;\r\n  }\r\n  &:hover {\r\n    box-shadow: ${props => props.theme.shadows.post.hover};\r\n    transform: scale(1.04);\r\n  }\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    border-radius: 8px;\r\n    > div {\r\n      position: static !important;\r\n    }\r\n    > div > div {\r\n      position: static !important;\r\n    }\r\n    &:focus {\r\n      outline: none;\r\n      box-shadow: 0 0 0 5px ${props => props.theme.colors.background};\r\n    }\r\n  }\r\n  flex-basis: 100%;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  @media (max-width: 800px) {\r\n    flex-basis: 100%;\r\n    max-width: 100%;\r\n    width: 100%;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  @media (max-width: 500px) {\r\n    min-height: 200px;\r\n  }\r\n`\r\n\r\nconst Information = styled.div`\r\n  padding: 1rem 1.5rem;\r\n  h1 {\r\n    font-size: 2rem;\r\n    display: inline-block;\r\n    color: ${props => props.theme.colors.text.base};\r\n    /* transition: all ${props => props.theme.transitions.default.duration}; */\r\n    &:hover {\r\n      color: ${props => props.theme.colors.text.light};\r\n    }\r\n  }\r\n  text-align: center;\r\n  flex-basis: 100%;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  @media (max-width: 800px) {\r\n    flex-basis: 100%;\r\n    max-width: 100%;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst Date = styled.div`\r\n  margin-top: 1rem;\r\n  color: ${props => props.theme.colors.text.light};\r\n`\r\n\r\nconst Title = styled.h1`\r\n  margin: 0;\r\n`\r\n\r\nconst Post = ({ path, cover, title, date, excerpt, tags }) => (\r\n  <Container>\r\n    <Wrapper>\r\n      <Image>\r\n        <Link to={`posts${path}`} title={title}>\r\n          <Img fluid={cover} alt={title} />\r\n        </Link>\r\n      </Image>\r\n      <Information>\r\n        <Date>{date}</Date>\r\n        <Link to={`posts${path}`}>\r\n          <Title>{title}</Title>\r\n        </Link>\r\n        <TagsBlock list={tags} />\r\n        {excerpt}\r\n      </Information>\r\n    </Wrapper>\r\n  </Container>\r\n)\r\n\r\nexport default Post\r\n\r\nPost.propTypes = {\r\n  cover: PropTypes.object.isRequired,\r\n  path: PropTypes.string.isRequired,\r\n  excerpt: PropTypes.string,\r\n  date: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  tags: PropTypes.array.isRequired\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport styled from '@emotion/styled'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TagsContainer = styled.div`\r\n  margin: 1rem 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  a {\r\n    margin: 0 1rem 1rem 0;\r\n    color: white;\r\n    padding: 0.3rem 0.6rem;\r\n    background: #666666;\r\n    border-radius: 10px;\r\n    &:hover {\r\n      background: black;\r\n      box-shadow: ${props => props.theme.shadows.post.default};\r\n      transform: scale(1.02);\r\n    }\r\n  }\r\n`\r\n\r\nconst TagsBlock = ({ list }) => (\r\n  <TagsContainer>\r\n    {list &&\r\n      list.map(tag => {\r\n        const upperTag = tag.charAt(0).toUpperCase() + tag.slice(1)\r\n        return (\r\n          <Link key={tag} to={`/tags/${tag}`}>\r\n            <span>{upperTag}</span>\r\n          </Link>\r\n        )\r\n      })}\r\n  </TagsContainer>\r\n)\r\n\r\nexport default TagsBlock\r\n\r\nTagsBlock.propTypes = {\r\n  list: PropTypes.array\r\n}\r\n","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport Img from 'gatsby-image'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Wrapper = styled.header`\r\n  /* background: ${props => props.theme.gradient.rightToLeft}; */\r\n  height: 300px;\r\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\r\n    height: 300px;\r\n  }\r\n  @media (max-width: ${props => props.theme.breakpoints.s}) {\r\n    height: 275px;\r\n  }\r\n  position: relative;\r\n  overflow: hidden;\r\n`\r\n\r\nconst Text = styled.div`\r\n  color: ${props => props.theme.colors.text.base};\r\n  z-index: 0;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  width: 100%;\r\n  /* max-width: ${props => props.theme.layout.base}; */\r\n  padding: 0 2rem;\r\n  margin-bottom: 3rem;\r\n  align-items: center;\r\n`\r\n\r\nconst Subtitle = styled.p`\r\n  max-width: 650px;\r\n  color: ${props => props.theme.colors.text.base};\r\n`\r\n\r\nconst Header = ({ children, title, date, cover }) => (\r\n  <Wrapper>\r\n    <Img fluid={cover || {} || [] || ''} alt={title} />\r\n    <Text>\r\n      <h1>{title}</h1>\r\n      <h3>{date}</h3>\r\n\r\n      {children && <Subtitle>{children}</Subtitle>}\r\n    </Text>\r\n  </Wrapper>\r\n)\r\n\r\nexport default Header\r\n\r\nHeader.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\r\n  cover: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\r\n  date: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\r\n  title: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object,\r\n    PropTypes.bool\r\n  ])\r\n}\r\n\r\nHeader.defaultProps = {\r\n  children: false,\r\n  cover: false,\r\n  date: false,\r\n  title: false\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport styled from '@emotion/styled'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport Layout from '../layouts'\r\nimport Container from '../layouts/Container'\r\nimport Header from '../layouts/Header'\r\nimport site from '../../config/site'\r\nimport Post from '../components/Post'\r\n\r\nconst StyledLink = styled(Link)`\r\n  color: ${(props) => props.theme.colors.text.base};\r\n  padding: 5px 10px;\r\n  border: solid 1px #fff;\r\n  border-radius: 20px;\r\n  &:hover {\r\n    background: ${(props) => props.theme.colors.background};\r\n  }\r\n`\r\n\r\nconst Information = styled.div`\r\n  text-align: center;\r\n  h1 {\r\n    font-size: 2rem;\r\n    margin-bottom: 1.25rem;\r\n  }\r\n`\r\n\r\nconst Tag = ({ pageContext }) => {\r\n  const { posts, tagName } = pageContext\r\n  const upperTag = tagName.charAt(0).toUpperCase() + tagName.slice(1)\r\n  return (\r\n    <Layout>\r\n      <Helmet title={`${tagName}-${site.title}`} />\r\n      <Header title={upperTag}>\r\n        <StyledLink to='/taglist'>All Tags</StyledLink>\r\n      </Header>\r\n      <Container>\r\n        <Information>\r\n          {posts.map((post, index) => (\r\n            <Post\r\n              key={index}\r\n              title={post.frontmatter.title}\r\n              date={post.frontmatter.date}\r\n              tags={post.frontmatter.tags}\r\n              path={post.frontmatter.path}\r\n              cover={post.frontmatter.cover.childImageSharp.fluid}\r\n            />\r\n          ))}\r\n        </Information>\r\n      </Container>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Tag\r\n\r\nTag.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    posts: PropTypes.array,\r\n    tagName: PropTypes.string\r\n  })\r\n}\r\n"],"sourceRoot":""}