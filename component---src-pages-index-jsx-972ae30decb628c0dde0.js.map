{"version":3,"sources":["webpack:///./src/components/Post.jsx","webpack:///./src/pages/index.jsx","webpack:///./src/components/TagsBlock.jsx"],"names":["Wrapper","Image","props","theme","shadows","post","default","hover","colors","background","Information","text","base","light","Date","Title","Post","path","cover","title","date","excerpt","tags","to","fluid","alt","list","Home","edges","data","allMarkdownRemark","site","map","node","key","id","frontmatter","childImageSharp","query","TagsContainer","TagsBlock","tag","upperTag","charAt","toUpperCase","slice"],"mappings":"8LAQMA,EAAO,2IAQPC,EAAK,oFAGK,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,KAAKC,UAHvC,kFAWO,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,KAAKE,QAXzC,oNA6BmB,SAAAL,GAAK,OAAIA,EAAMC,MAAMK,OAAOC,aA7B/C,qLA8CLC,EAAW,4GAKJ,SAAAR,GAAK,OAAIA,EAAMC,MAAMK,OAAOG,KAAKC,OAL7B,mBAQF,SAAAV,GAAK,OAAIA,EAAMC,MAAMK,OAAOG,KAAKE,QAR/B,uIAsBXC,EAAI,iEAEC,SAAAZ,GAAK,OAAIA,EAAMC,MAAMK,OAAOG,KAAKE,QAFlC,KAKJE,EAAK,2EAwBIC,IApBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,KAAMC,EAA7B,EAA6BA,QAASC,EAAtC,EAAsCA,KAAtC,OACX,YAAC,IAAD,KACE,YAACtB,EAAD,KACE,YAACC,EAAD,KACE,YAAC,OAAD,CAAMsB,GAAE,QAAUN,EAAQE,MAAOA,GAC/B,YAAC,IAAD,CAAKK,MAAON,EAAOO,IAAKN,MAG5B,YAACT,EAAD,KACE,YAACI,EAAD,KAAOM,GACP,YAAC,OAAD,CAAMG,GAAE,QAAUN,GAChB,YAACF,EAAD,KAAQI,IAEV,YAAC,IAAD,CAAWO,KAAMJ,IAChBD,O,gLClGHrB,EAAO,uFAgCE2B,UA5BF,SAAC,GAAc,IAEHC,EAFE,EAAXC,KAEZC,kBAAqBF,MAEvB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAQT,MAAK,aAAeY,IAAKZ,QACjC,YAACnB,EAAD,KACG4B,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,YAAC,IAAD,CACEC,IAAKD,EAAKE,GACVhB,MAAOc,EAAKG,YAAYjB,MACxBC,KAAMa,EAAKG,YAAYhB,KACvBE,KAAMW,EAAKG,YAAYd,KACvBD,QAASY,EAAKZ,QACdJ,KAAMgB,EAAKG,YAAYnB,KACvBC,MAAOe,EAAKG,YAAYlB,MAAMmB,gBAAgBb,cAcnD,IAAMc,EAAK,a,sFCtCZC,EAAa,mQAcC,SAAArC,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,KAAKC,UAdnC,6BAkCJkC,IAdG,SAAC,GAAD,IAAGd,EAAH,EAAGA,KAAH,OAChB,YAACa,EAAD,KACGb,GACCA,EAAKM,KAAI,SAAAS,GACP,IAAMC,EAAWD,EAAIE,OAAO,GAAGC,cAAgBH,EAAII,MAAM,GACzD,OACE,YAAC,OAAD,CAAMX,IAAKO,EAAKlB,GAAE,SAAWkB,GAC3B,wBAAOC","file":"component---src-pages-index-jsx-972ae30decb628c0dde0.js","sourcesContent":["import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\nimport TagsBlock from './TagsBlock'\r\nimport Container from '../layouts/Container'\r\n\r\nconst Wrapper = styled.article`\r\n  margin: 0 3rem;\r\n  display: flex;\r\n  @media (max-width: 1000px) {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Image = styled.div`\r\n  margin: auto;\r\n  position: relative;\r\n  box-shadow: ${props => props.theme.shadows.post.default};\r\n  /* transition: ${props => props.theme.transitions.boom.transition}; */\r\n  border-radius: 8px;\r\n  min-height: 300px;\r\n  img {\r\n    border-radius: 8px;\r\n  }\r\n  &:hover {\r\n    box-shadow: ${props => props.theme.shadows.post.hover};\r\n    transform: scale(1.04);\r\n  }\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    border-radius: 8px;\r\n    > div {\r\n      position: static !important;\r\n    }\r\n    > div > div {\r\n      position: static !important;\r\n    }\r\n    &:focus {\r\n      outline: none;\r\n      box-shadow: 0 0 0 5px ${props => props.theme.colors.background};\r\n    }\r\n  }\r\n  flex-basis: 100%;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  @media (max-width: 800px) {\r\n    flex-basis: 100%;\r\n    max-width: 100%;\r\n    width: 100%;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  @media (max-width: 500px) {\r\n    min-height: 200px;\r\n  }\r\n`\r\n\r\nconst Information = styled.div`\r\n  padding: 1rem 1.5rem;\r\n  h1 {\r\n    font-size: 2rem;\r\n    display: inline-block;\r\n    color: ${props => props.theme.colors.text.base};\r\n    /* transition: all ${props => props.theme.transitions.default.duration}; */\r\n    &:hover {\r\n      color: ${props => props.theme.colors.text.light};\r\n    }\r\n  }\r\n  text-align: center;\r\n  flex-basis: 100%;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  @media (max-width: 800px) {\r\n    flex-basis: 100%;\r\n    max-width: 100%;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst Date = styled.div`\r\n  margin-top: 1rem;\r\n  color: ${props => props.theme.colors.text.light};\r\n`\r\n\r\nconst Title = styled.h1`\r\n  margin: 0;\r\n`\r\n\r\nconst Post = ({ path, cover, title, date, excerpt, tags }) => (\r\n  <Container>\r\n    <Wrapper>\r\n      <Image>\r\n        <Link to={`posts${path}`} title={title}>\r\n          <Img fluid={cover} alt={title} />\r\n        </Link>\r\n      </Image>\r\n      <Information>\r\n        <Date>{date}</Date>\r\n        <Link to={`posts${path}`}>\r\n          <Title>{title}</Title>\r\n        </Link>\r\n        <TagsBlock list={tags} />\r\n        {excerpt}\r\n      </Information>\r\n    </Wrapper>\r\n  </Container>\r\n)\r\n\r\nexport default Post\r\n\r\nPost.propTypes = {\r\n  cover: PropTypes.object.isRequired,\r\n  path: PropTypes.string.isRequired,\r\n  excerpt: PropTypes.string,\r\n  date: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  tags: PropTypes.array.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql } from 'gatsby'\r\nimport Helmet from 'react-helmet'\r\nimport styled from '@emotion/styled'\r\nimport Layout from '../layouts'\r\nimport Post from '../components/Post'\r\nimport site from '../../config/site'\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 2rem 2.5rem;\r\n`\r\n\r\nconst Home = ({ data }) => {\r\n  const {\r\n    allMarkdownRemark: { edges }\r\n  } = data\r\n  return (\r\n    <Layout>\r\n      <Helmet title={`Home Page-${site.title}`} />\r\n      <Wrapper>\r\n        {edges.map(({ node }) => (\r\n          <Post\r\n            key={node.id}\r\n            title={node.frontmatter.title}\r\n            date={node.frontmatter.date}\r\n            tags={node.frontmatter.tags}\r\n            excerpt={node.excerpt}\r\n            path={node.frontmatter.path}\r\n            cover={node.frontmatter.cover.childImageSharp.fluid}\r\n          />\r\n        ))}\r\n      </Wrapper>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nHome.propTypes = {\r\n  data: PropTypes.object\r\n}\r\n\r\nexport default Home\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 75)\r\n          frontmatter {\r\n            title\r\n            path\r\n            tags\r\n            date(formatString: \"YYYY年MM月DD日\")\r\n            cover {\r\n              childImageSharp {\r\n                fluid(\r\n                  maxWidth: 1000\r\n                  quality: 90\r\n                  traceSVG: { color: \"#2B2B2F\" }\r\n                ) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport styled from '@emotion/styled'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TagsContainer = styled.div`\r\n  margin: 1rem 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  a {\r\n    margin: 0 1rem 1rem 0;\r\n    color: white;\r\n    padding: 0.3rem 0.6rem;\r\n    background: #666666;\r\n    border-radius: 10px;\r\n    &:hover {\r\n      background: black;\r\n      box-shadow: ${props => props.theme.shadows.post.default};\r\n      transform: scale(1.02);\r\n    }\r\n  }\r\n`\r\n\r\nconst TagsBlock = ({ list }) => (\r\n  <TagsContainer>\r\n    {list &&\r\n      list.map(tag => {\r\n        const upperTag = tag.charAt(0).toUpperCase() + tag.slice(1)\r\n        return (\r\n          <Link key={tag} to={`/tags/${tag}`}>\r\n            <span>{upperTag}</span>\r\n          </Link>\r\n        )\r\n      })}\r\n  </TagsContainer>\r\n)\r\n\r\nexport default TagsBlock\r\n\r\nTagsBlock.propTypes = {\r\n  list: PropTypes.array\r\n}\r\n"],"sourceRoot":""}