{"version":3,"sources":["webpack:///./src/components/TagsBlock.jsx","webpack:///./src/styles/prism.js","webpack:///./src/layouts/Content.jsx","webpack:///./src/templates/ampPost.jsx"],"names":["TagsContainer","props","theme","shadows","post","default","TagsBlock","list","map","tag","upperTag","charAt","toUpperCase","slice","key","to","generatePrism","css","colors","background","text","light","Wrapper","base","link","Content","input","dangerouslySetInnerHTML","__html","SuggestionBar","ListSuggestionBar","PostSuggestion","Post","data","pageContext","next","prev","relatedPosts","latestPosts","markdownRemark","image","frontmatter","cover","childImageSharp","fluid","title","html","relatedList","i","relatedPost","push","path","latestList","latestPost","description","excerpt","pathname","article","tags","query"],"mappings":"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","file":"component---src-templates-amp-post-jsx-ab07e020b00bcba7e3a3.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport styled from '@emotion/styled'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TagsContainer = styled.div`\r\n  margin: 1rem 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  a {\r\n    margin: 0 1rem 1rem 0;\r\n    color: white;\r\n    padding: 0.3rem 0.6rem;\r\n    background: #666666;\r\n    border-radius: 10px;\r\n    &:hover {\r\n      background: black;\r\n      box-shadow: ${props => props.theme.shadows.post.default};\r\n      transform: scale(1.02);\r\n    }\r\n  }\r\n`\r\n\r\nconst TagsBlock = ({ list }) => (\r\n  <TagsContainer>\r\n    {list &&\r\n      list.map(tag => {\r\n        const upperTag = tag.charAt(0).toUpperCase() + tag.slice(1)\r\n        return (\r\n          <Link key={tag} to={`/tags/${tag}`}>\r\n            <span>{upperTag}</span>\r\n          </Link>\r\n        )\r\n      })}\r\n  </TagsContainer>\r\n)\r\n\r\nexport default TagsBlock\r\n\r\nTagsBlock.propTypes = {\r\n  list: PropTypes.array\r\n}\r\n","import { css } from '@emotion/core'\r\n\r\nconst generatePrism = ({ theme }) => css`\r\n  p > code,\r\n  li > code {\r\n    color: #f8f8f2;\r\n    background: #131316;\r\n    font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\r\n    text-align: left;\r\n    word-spacing: normal;\r\n    word-break: normal;\r\n    word-wrap: normal;\r\n    line-height: 1.5;\r\n    padding: 0.4em 0.5em;\r\n    margin: 0.5em 0;\r\n    overflow: auto;\r\n    border-radius: 0.3em;\r\n    tab-size: 4;\r\n    hyphens: none;\r\n  }\r\n  code[class*='language-'],\r\n  pre[class*='language-'] {\r\n    color: #f8f8f2;\r\n    background: none;\r\n    font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\r\n    text-align: left;\r\n    word-spacing: normal;\r\n    word-break: normal;\r\n    word-wrap: normal;\r\n    line-height: 1.5;\r\n    tab-size: 4;\r\n    hyphens: none;\r\n  }\r\n  pre[class*='language-'] {\r\n    padding: 1em;\r\n    margin: 1.5rem 0;\r\n    overflow: auto;\r\n    border-radius: 0.3em;\r\n    &::-webkit-scrollbar-thumb {\r\n      background: ${theme.colors.background};\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n      background: ${theme.colors.text.light};\r\n    }\r\n    &::-webkit-scrollbar {\r\n      width: 12px;\r\n      height: 12px;\r\n    }\r\n  }\r\n  pre[class*='language-'] {\r\n    background: #131316;\r\n  }\r\n  p > code[class*='language-'],\r\n  li > code[class*='language-'] {\r\n    border-radius: 0.3em;\r\n    background: rgba(52, 152, 219, 0.2);\r\n    color: #2e3246;\r\n    bottom: 2px;\r\n    position: relative;\r\n  }\r\n  .token.operator {\r\n    color: #bc78d7;\r\n  }\r\n  .token.comment,\r\n  .token.prolog,\r\n  .token.doctype,\r\n  .token.cdata {\r\n    color: slategray;\r\n  }\r\n  .token.punctuation {\r\n    color: #7ad7e2;\r\n  }\r\n  .namespace {\r\n    opacity: 0.7;\r\n  }\r\n  .token.property,\r\n  .token.tag,\r\n  .token.constant,\r\n  .token.symbol,\r\n  .token.deleted {\r\n    color: #ef514f;\r\n  }\r\n  .token.boolean,\r\n  .token.number {\r\n    color: #ae81ff;\r\n  }\r\n  .token.selector,\r\n  .token.attr-name,\r\n  .token.string,\r\n  .token.char,\r\n  .token.builtin,\r\n  .token.inserted {\r\n    color: #e5db89;\r\n  }\r\n  .token.entity,\r\n  .token.url,\r\n  .language-css .token.string,\r\n  .style .token.string,\r\n  .token.variable {\r\n    color: #f8f8f2;\r\n  }\r\n  .token.atrule,\r\n  .token.attr-value,\r\n  .token.class-name {\r\n    color: #e6db74;\r\n  }\r\n  .token.function {\r\n    color: #84c16a;\r\n  }\r\n\r\n  .token.keyword {\r\n    color: #6095ea;\r\n  }\r\n  .token.regex,\r\n  .token.important {\r\n    color: #fd971f;\r\n  }\r\n  .token.important,\r\n  .token.bold {\r\n    font-weight: bold;\r\n  }\r\n  .token.italic {\r\n    font-style: italic;\r\n  }\r\n  .token.entity {\r\n    cursor: help;\r\n  }\r\n`\r\n\r\nexport default generatePrism\r\n","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport PropTypes from 'prop-types'\r\nimport generatePrism from '../styles/prism'\r\n\r\nconst Wrapper = styled.div`\r\n  ${generatePrism};\r\n  color: ${props => props.theme.colors.text.base};\r\n  p,\r\n  li {\r\n    letter-spacing: -0.003em;\r\n    --baseline-multiplier: 0.179;\r\n    --x-height-multiplier: 0.35;\r\n    font-size: 1.15rem;\r\n    line-height: 2;\r\n    code {\r\n      padding: 0.2rem 0.5rem;\r\n      margin: 0.5rem 0;\r\n    }\r\n  }\r\n  a:not(.gatsby-resp-image-link):not(.anchor) {\r\n    color: ${props => props.theme.colors.text.link};\r\n    box-shadow: inset 0 -2px 0 ${props => props.theme.colors.background};\r\n    border-bottom: 1px solid ${props => props.theme.colors.background};\r\n    text-decoration: none;\r\n    &:hover,\r\n    &:focus {\r\n      background: ${props => props.theme.colors.background};\r\n      color: ${props => props.theme.colors.text.link};\r\n    }\r\n  }\r\n  h1 {\r\n    margin-top: 3rem;\r\n  }\r\n  h2 {\r\n    margin-top: 1rem;\r\n  }\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    display: block;\r\n    position: relative;\r\n    a {\r\n      box-shadow: none;\r\n      border-bottom: none;\r\n      &:hover,\r\n      &:focus {\r\n        background: none;\r\n      }\r\n    }\r\n    &:hover {\r\n      .anchor svg {\r\n        opacity: 0.8;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Content = ({ input }) => (\r\n  <Wrapper dangerouslySetInnerHTML={{ __html: input }} />\r\n)\r\n\r\nexport default Content\r\n\r\nContent.propTypes = {\r\n  input: PropTypes.any.isRequired\r\n}\r\n","import React from 'react'\r\nimport { graphql, Link } from 'gatsby'\r\nimport styled from '@emotion/styled'\r\nimport PropTypes from 'prop-types'\r\nimport Layout from '../layouts/'\r\nimport Container from '../layouts/Container'\r\nimport Content from '../layouts/Content'\r\nimport SEO from '../components/SEO'\r\nimport TagsBlock from '../components/TagsBlock'\r\n\r\nconst SuggestionBar = styled.div`\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  justify-content: space-between;\r\n  background: ${props => props.theme.colors.background};\r\n  box-shadow: ${props => props.theme.shadows.post.default};\r\n`\r\nconst ListSuggestionBar = styled.div`\r\n  background: ${props => props.theme.colors.background};\r\n  box-shadow: ${props => props.theme.shadows.post.default};\r\n`\r\nconst PostSuggestion = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 1rem 3rem 0 3rem;\r\n  a {\r\n    color: ${props => props.theme.colors.text.base};\r\n  }\r\n`\r\n\r\nconst Post = ({ data, pageContext }) => {\r\n  const { next, prev, relatedPosts, latestPosts } = pageContext\r\n  const post = data.markdownRemark\r\n  const image = post.frontmatter.cover.childImageSharp.fluid\r\n  const title = post.frontmatter.title\r\n  const html = post.html\r\n\r\n  // 関連記事\r\n  const relatedList = []\r\n  for (var i in relatedPosts) {\r\n    const relatedPost = relatedPosts[i]\r\n    relatedList.push(\r\n      <PostSuggestion>\r\n        {relatedPost && (\r\n          <Link to={relatedPost.frontmatter.path}>\r\n            relatedPost\r\n            <h3>{relatedPost.frontmatter.title}</h3>\r\n          </Link>\r\n        )}\r\n      </PostSuggestion>\r\n    )\r\n  }\r\n\r\n  // 直近\r\n  const latestList = []\r\n  for (i in latestPosts) {\r\n    const latestPost = latestPosts[i]\r\n    latestList.push(\r\n      <PostSuggestion>\r\n        {latestPost && (\r\n          <Link to={`posts${latestPost.frontmatter.path}`}>\r\n            latestPost\r\n            <h3>{latestPost.frontmatter.title}</h3>\r\n          </Link>\r\n        )}\r\n      </PostSuggestion>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title={title}\r\n        description={post.frontmatter.description || post.excerpt || ' '}\r\n        image={image}\r\n        pathname={post.frontmatter.path}\r\n        article\r\n      />\r\n      {/* <Header title={title} date={date} cover={image} /> */}\r\n      <Container>\r\n        <Content input={html} />\r\n        <TagsBlock list={post.frontmatter.tags || []} />\r\n      </Container>\r\n      <SuggestionBar>\r\n        <PostSuggestion>\r\n          {prev && (\r\n            <Link to={prev.frontmatter.path}>\r\n              Previous\r\n              <h3>{prev.frontmatter.title}</h3>\r\n            </Link>\r\n          )}\r\n        </PostSuggestion>\r\n        <PostSuggestion>\r\n          {next && (\r\n            <Link to={next.frontmatter.path}>\r\n              Next\r\n              <h3>{next.frontmatter.title}</h3>\r\n            </Link>\r\n          )}\r\n        </PostSuggestion>\r\n      </SuggestionBar>\r\n      <ListSuggestionBar>\r\n        関連記事\r\n        {relatedList}\r\n      </ListSuggestionBar>\r\n      <ListSuggestionBar>\r\n        最近投稿した記事\r\n        {latestList}\r\n      </ListSuggestionBar>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Post\r\n\r\nPost.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    prev: PropTypes.object,\r\n    next: PropTypes.object,\r\n    relatedPosts: PropTypes.array,\r\n    latestPosts: PropTypes.array\r\n  }).isRequired,\r\n  data: PropTypes.object.isRequired\r\n}\r\n\r\nexport const query = graphql`\r\n  query($pathSlug: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\r\n      html\r\n      frontmatter {\r\n        date\r\n        title\r\n        path\r\n        tags\r\n        description\r\n        cover {\r\n          childImageSharp {\r\n            fluid(\r\n              maxWidth: 1920\r\n              quality: 90\r\n              duotone: { highlight: \"#386eee\", shadow: \"#2323be\", opacity: 60 }\r\n            ) {\r\n              ...GatsbyImageSharpFluid_withWebp\r\n            }\r\n            resize(width: 1200, quality: 90) {\r\n              src\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}