{"version":3,"sources":["webpack:///./src/components/Post.jsx","webpack:///./src/components/TagsBlock.jsx","webpack:///./src/layouts/Header.jsx","webpack:///./src/templates/tag.jsx"],"names":["Wrapper","Image","props","theme","shadows","post","default","hover","colors","background","Information","text","base","light","Date","Title","Post","path","cover","title","date","excerpt","tags","to","fluid","alt","list","TagsContainer","TagsBlock","map","tag","upperTag","charAt","toUpperCase","slice","key","breakpoints","m","s","Text","Subtitle","Header","children","defaultProps","StyledLink","Link","Tag","pageContext","posts","tagName","site","index","frontmatter","childImageSharp"],"mappings":"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","file":"component---src-templates-tag-jsx-2c64cf2c4d53ea662461.js","sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport TagsBlock from './TagsBlock'\nimport Container from '../layouts/Container'\n\nconst Wrapper = styled.article`\n  margin: 0 3rem;\n  display: flex;\n  @media (max-width: 1000px) {\n    display: block;\n  }\n`\n\nconst Image = styled.div`\n  margin: auto;\n  position: relative;\n  box-shadow: ${props => props.theme.shadows.post.default};\n  /* transition: ${props => props.theme.transitions.boom.transition}; */\n  border-radius: 8px;\n  min-height: 300px;\n  img {\n    border-radius: 8px;\n  }\n  &:hover {\n    box-shadow: ${props => props.theme.shadows.post.hover};\n    transform: scale(1.04);\n  }\n  a {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    border-radius: 8px;\n    > div {\n      position: static !important;\n    }\n    > div > div {\n      position: static !important;\n    }\n    &:focus {\n      outline: none;\n      box-shadow: 0 0 0 5px ${props => props.theme.colors.background};\n    }\n  }\n  flex-basis: 100%;\n  max-width: 100%;\n  width: 100%;\n  @media (max-width: 800px) {\n    flex-basis: 100%;\n    max-width: 100%;\n    width: 100%;\n    margin-bottom: 1.5rem;\n  }\n  @media (max-width: 500px) {\n    min-height: 200px;\n  }\n`\n\nconst Information = styled.div`\n  padding: 1rem 1.5rem;\n  h1 {\n    font-size: 2rem;\n    display: inline-block;\n    color: ${props => props.theme.colors.text.base};\n    /* transition: all ${props => props.theme.transitions.default.duration}; */\n    &:hover {\n      color: ${props => props.theme.colors.text.light};\n    }\n  }\n  text-align: center;\n  flex-basis: 100%;\n  max-width: 100%;\n  width: 100%;\n  @media (max-width: 800px) {\n    flex-basis: 100%;\n    max-width: 100%;\n    width: 100%;\n  }\n`\n\nconst Date = styled.div`\n  margin-top: 1rem;\n  color: ${props => props.theme.colors.text.light};\n`\n\nconst Title = styled.h1`\n  margin: 0;\n`\n\nconst Post = ({ path, cover, title, date, excerpt, tags }) => (\n  <Container>\n    <Wrapper>\n      <Image>\n        <Link to={`posts${path}`} title={title}>\n          <Img fluid={cover} alt={title} />\n        </Link>\n      </Image>\n      <Information>\n        <Date>{date}</Date>\n        <Link to={`posts${path}`}>\n          <Title>{title}</Title>\n        </Link>\n        <TagsBlock list={tags} />\n        {excerpt}\n      </Information>\n    </Wrapper>\n  </Container>\n)\n\nexport default Post\n\nPost.propTypes = {\n  cover: PropTypes.object.isRequired,\n  path: PropTypes.string.isRequired,\n  excerpt: PropTypes.string,\n  date: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  tags: PropTypes.array.isRequired\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from '@emotion/styled'\nimport PropTypes from 'prop-types'\n\nconst TagsContainer = styled.div`\n  margin: 1rem 0;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  a {\n    margin: 0 1rem 1rem 0;\n    color: white;\n    padding: 0.3rem 0.6rem;\n    background: #666666;\n    border-radius: 10px;\n    &:hover {\n      background: black;\n      box-shadow: ${props => props.theme.shadows.post.default};\n      transform: scale(1.02);\n    }\n  }\n`\n\nconst TagsBlock = ({ list }) => (\n  <TagsContainer>\n    {list &&\n      list.map(tag => {\n        const upperTag = tag.charAt(0).toUpperCase() + tag.slice(1)\n        return (\n          <Link key={tag} to={`/tags/${tag}`}>\n            <span>{upperTag}</span>\n          </Link>\n        )\n      })}\n  </TagsContainer>\n)\n\nexport default TagsBlock\n\nTagsBlock.propTypes = {\n  list: PropTypes.array\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport Img from 'gatsby-image'\nimport PropTypes from 'prop-types'\n\nconst Wrapper = styled.header`\n  /* background: ${props => props.theme.gradient.rightToLeft}; */\n  height: 300px;\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    height: 300px;\n  }\n  @media (max-width: ${props => props.theme.breakpoints.s}) {\n    height: 275px;\n  }\n  position: relative;\n  overflow: hidden;\n`\n\nconst Text = styled.div`\n  color: ${props => props.theme.colors.text.base};\n  z-index: 0;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  width: 100%;\n  /* max-width: ${props => props.theme.layout.base}; */\n  padding: 0 2rem;\n  margin-bottom: 3rem;\n  align-items: center;\n`\n\nconst Subtitle = styled.p`\n  max-width: 650px;\n  color: ${props => props.theme.colors.text.base};\n`\n\nconst Header = ({ children, title, date, cover }) => (\n  <Wrapper>\n    <Img fluid={cover || {} || [] || ''} alt={title} />\n    <Text>\n      <h1>{title}</h1>\n      <h3>{date}</h3>\n\n      {children && <Subtitle>{children}</Subtitle>}\n    </Text>\n  </Wrapper>\n)\n\nexport default Header\n\nHeader.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n  cover: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  date: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  title: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.bool\n  ])\n}\n\nHeader.defaultProps = {\n  children: false,\n  cover: false,\n  date: false,\n  title: false\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from '@emotion/styled'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport Layout from '../layouts'\nimport Container from '../layouts/Container'\nimport Header from '../layouts/Header'\nimport site from '../../config/site'\nimport Post from '../components/Post'\n\nconst StyledLink = styled(Link)`\n  color: ${(props) => props.theme.colors.text.base};\n  padding: 5px 10px;\n  border: solid 1px #fff;\n  border-radius: 20px;\n  &:hover {\n    background: ${(props) => props.theme.colors.background};\n  }\n`\n\nconst Information = styled.div`\n  text-align: center;\n  h1 {\n    font-size: 2rem;\n    margin-bottom: 1.25rem;\n  }\n`\n\nconst Tag = ({ pageContext }) => {\n  const { posts, tagName } = pageContext\n  const upperTag = tagName.charAt(0).toUpperCase() + tagName.slice(1)\n  return (\n    <Layout>\n      <Helmet title={`${tagName}-${site.title}`} />\n      <Header title={upperTag}>\n        <StyledLink to='/taglist'>All Tags</StyledLink>\n      </Header>\n      <Container>\n        <Information>\n          {posts.map((post, index) => (\n            <Post\n              key={index}\n              title={post.frontmatter.title}\n              date={post.frontmatter.date}\n              tags={post.frontmatter.tags}\n              path={post.frontmatter.path}\n              cover={post.frontmatter.cover.childImageSharp.fluid}\n            />\n          ))}\n        </Information>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Tag\n\nTag.propTypes = {\n  pageContext: PropTypes.shape({\n    posts: PropTypes.array,\n    tagName: PropTypes.string\n  })\n}\n"],"sourceRoot":""}